
sign:
5KBGwdpPYgViff1wram2UnUCoU4eDK5eKTpZTBGRHCBgiPHF5o5


(gdb) p/x s
$2 = {0x35, 0xd3, 0x1e, 0xfc, 0x54, 0xce, 0x4, 0xaf, 0xba, 0xf3, 0xa4, 0x23, 0xfd, 0x3d, 0x84, 0x94, 0x1a, 0x5c, 0x36, 0x9a, 0xb1, 0xa1, 
  0x60, 0x33, 0x9e, 0xc9, 0x66, 0x36, 0x15, 0xd6, 0x57, 0x4c, 0x24, 0x36, 0xf6, 0x75, 0xfc, 0x3c, 0x15, 0xcd, 0xab, 0x57, 0xd5, 0xc4, 0x51,
  0x9a, 0xe8, 0x6d, 0xfd, 0x91, 0xc2, 0x8a, 0xc9, 0xce, 0xd7, 0x4f, 0x31, 0xfa, 0xa9, 0x2a, 0x66, 0x98, 0x44, 0xcd, 0x0 <repeats 16 times>}
(gdb)

SIG_K1_K2JCc9YbD4utsP3XjEZXMw9ngNagTUnzxhRSB9KiupdFoxnsnwwbKLLPENeGTmpRkb8rCoHHiUDZ5kY1jUdSa47mxERYzC



verify:

(gdb) p pub_key 
$4 = (uint8_t *) 0x7fffffffdad0 "EOS8SGcitDFW42Dg19xgeG5AMARB7Y7ByrJ5RNapRG4J3V3d5wAs6"
(gdb) p sig
$5 = (uint8_t *) 0x7fffffffdb20 "SIG_K1_K2JCc9YbD4utsP3XjEZXMw9ngNagTUnzxhRSB9KiupdFoxnsnwwbKLLPENeGTmpRkb8rCoHHiUDZ5kY1jUdSa47mxERYzC"
(gdb) p msg
$6 = (uint8_t *) 0x464926 "1234567890"
(gdb)

(gdb) p/x s
$10 = {0x35, 0xd3, 0x1e, 0xfc, 0x54, 0xce, 0x4, 0xaf, 0xba, 0xf3, 0xa4, 0x23, 0xfd, 0x3d, 0x84, 0x94, 0x1a, 0x5c, 0x36, 0x9a, 0xb1, 0xa1, 
  0x60, 0x33, 0x9e, 0xc9, 0x66, 0x36, 0x15, 0xd6, 0x57, 0x4c, 0x24, 0x36, 0xf6, 0x75, 0xfc, 0x3c, 0x15, 0xcd, 0xab, 0x57, 0xd5, 0xc4, 0x51,
  0x9a, 0xe8, 0x6d, 0xfd, 0x91, 0xc2, 0x8a, 0xc9, 0xce, 0xd7, 0x4f, 0x31, 0xfa, 0xa9, 0x2a, 0x66, 0x98, 0x44, 0xcd, 0x0 <repeats 64 times>}
(gdb) 





static int ecc_verify(uint8_t *pub_key, uint8_t *sig, uint8_t *msg)
{
    uint8_t d[32];
    uint8_t r[33];
    uint8_t t[128] = {0};
    uint8_t s[128] = {0};
    int n = strlen((char *)msg);


    hasher_Raw(HASHER_SHA2, msg, n, d);
    memcpy(t, pub_key + 3, strlen((char *)pub_key) - 3); // cut 'EOS'
    Base58_decode(r, t);
    int h_len = strlen("SIG_K1_");
    memset(t, 0, sizeof(t));
    memcpy(t, sig + h_len, strlen((char *)sig) - h_len);
    Base58_decode_sig(s, t);
    int e = ecdsa_verify_digest(&secp256k1, r, s + 1, d);
    if (e != 0) {
        printf("%s: FAILED!!!.\n",__func__);
        return -1;
    }

    uint8_t rev[76] = {0};
    
    if (ecc_pub_recovery(rev, s, d) == 0) {
        if (memcmp(r, rev, 33) {
                printf("%s: Success!\n",__func__);
        }
    }

    return 0;
}

















